// #############################################################################
//! \file \cs30_f2837x\F2837xS_examples_Cpu1\cla_vmaxfloat\cpu01\vmaxfloat.cla
//!
//! \brief  Vector Maximum
//! \author Tri Thai
//! \date   August 2, 2013
//! 
//
//  Group: 			C2000
//  Target Family:	F2837x
//
// (C)Copyright 2013, Texas Instruments, Inc.
// #############################################################################
//$TI Release: PACKAGE NAME $
//$Release Date: PACKAGE RELEASE DATE $
// #############################################################################

//*****************************************************************************
// includes
//*****************************************************************************
#include "F2837xS_Cla_defines.h"
#include "F2837xS_device.h"     // Headerfile Include File


#include "VariblesRef.h"
#include "Cla_data.h"
#include "CLAmath.h"
#include "CoreCtrl.h"
#include "DCLCLA.h"
#include "DCL.h"
#include "MarcoDefine.h"



/*此函数未定义。WY*/
void CurrDirPwmA(float32 data)
{
}

/*此函数未定义。WY*/
void CurrDirPwmB(float32 data)
{
}

/*此函数未定义。WY*/
void CurrDirPwmC(float32 data)
{
}

__attribute__((interrupt)) void Cla1Task1 ( void )
{
    float tmp;
    tmp=((float )(*AdcaResultRegsADCRESULT8  & 0x0000ffff) - VirtulAD_loadCurrentA)*outputCurRatioCurrA;
    CurrDirPwmA(tmp);
}

__attribute__((interrupt)) void Cla1Task2 ( void )
{
    float tmp;
    tmp=((float )(*AdcaResultRegsADCRESULT10  & 0x0000ffff) - VirtulAD_loadCurrentA)*outputCurRatioCurrA;
    CurrDirPwmA(tmp);
}

__attribute__((interrupt)) void Cla1Task3 ( void )
{
    float tmp;
    tmp=((float )(*AdccResultRegsADCRESULT8  & 0x0000ffff) - VirtulAD_loadCurrentB)*outputCurRatioCurrB;
    CurrDirPwmB(tmp);

}
__attribute__((interrupt)) void Cla1Task4 ( void )
{
    float tmp;
    tmp=((float )(*AdccResultRegsADCRESULT10  & 0x0000ffff) - VirtulAD_loadCurrentB)*outputCurRatioCurrB;
    CurrDirPwmB(tmp);

}


__attribute__((interrupt)) void Cla1Task5 ( void )
{
    float tmp;

    tmp=((float )(*AdcbResultRegsADCRESULT8  & 0x0000ffff) - VirtulAD_loadCurrentC)*outputCurRatioCurrC;
    CurrDirPwmC(tmp);
}

__attribute__((interrupt)) void Cla1Task6 ( void )
{
    float tmp;
    tmp=((float )(*AdcbResultRegsADCRESULT10  & 0x0000ffff) - VirtulAD_loadCurrentC)*outputCurRatioCurrC;
    CurrDirPwmC(tmp);
}

__interrupt void Cla1Task7 ( void )
{

}
__interrupt void Cla1Task8 ( void )
{

}


